class t{el;callback;options;observer;constructor(t,s,o={}){this.el=t,this.callback=s,this.options=o,this.start()}start(){this.stop();const t=getComputedStyle(this.el),s=["top","right","bottom","left"].map((s=>"auto"===t[s]?"100%":-1*parseInt(t[s])-1+"px")).join(" ");this.observer=new IntersectionObserver((t=>{this.callback(!t[0].isIntersecting,this.el)}),{threshold:[1],rootMargin:s,root:this.options.root}),this.observer.observe(this.el)}stop(){this.observer?.disconnect()}}export{t as default};
